name: Deploy to S3 and CloudFront

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      github_repo:
        required: true
        type: string
    secrets:
      AWS_ACCOUNT_ID:
        required: true
      WEBSITE_USERNAME:
        required: true
      WEBSITE_PASSWORD:
        required: true
      S3_BUCKET:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Tools
        uses: ./.github/composite-actions/setup-tools
      - name: Configure AWS Credentials with OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
          aws-region: ${{ inputs.aws_region }}
      - name: Update Lambda Role First
        run: |
          terraform apply -auto-approve -no-color -target=module.cloudfront.aws_iam_role.lambda_exec -target=module.cloudfront.aws_lambda_function.basic_auth -var="account_id=${{ secrets.AWS_ACCOUNT_ID }}" -var="github_repo=${{ inputs.github_repo }}" -var="website_username=${{ secrets.WEBSITE_USERNAME }}" -var="website_password=${{ secrets.WEBSITE_PASSWORD }}"
        env:
          TF_VAR_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      - name: Run Terraform
        run: |
          echo "Running apply job - v5 - timestamp: $(date +%s)"
          terraform apply -auto-approve -no-color -var="account_id=${{ secrets.AWS_ACCOUNT_ID }}" -var="github_repo=${{ inputs.github_repo }}" -var="website_password=${{ secrets.WEBSITE_PASSWORD }}" -var="website_username=${{ secrets.WEBSITE_USERNAME }}" || {
            if grep -q "replicated function" terraform.log; then
              echo "Ignoring Lambda@Edge deletion error, continuing workflow..."
              exit 0
            else
              echo "Terraform failed with an unexpected error"
              exit 1
            fi
          }
        env:
          TF_LOG: DEBUG
          TF_LOG_PATH: terraform.log
      - name: Sync files to S3
        run: |
          aws s3 sync ./web s3://${{ secrets.S3_BUCKET }}-${{ secrets.AWS_ACCOUNT_ID }} --delete